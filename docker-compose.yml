version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    env_file:
      - .env
    depends_on:
      redis-stack:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - .:/app
      - ./output:/output

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - .env
    depends_on:
      redis-stack:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - app-network
    restart: always
    volumes:
      - ./output:/output

  redis-stack:
    image: redis/redis-stack:latest
    ports:
      - "6380:6379"
      - "8001:8001"
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:

volumes:
  mongo-data:
